@model PagedResult<Notification>
@using SunStore.Helpers
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
    const int PAGE_SIZE = 7;
}

<h1 class="text-center">Thông báo</h1>
<div class="container mt-4 w-50">

    @if (Model.Items.Count > 0)
    {
        <div class="list-group">

            @foreach (var n in Model.Items)
            {
                <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-start">
                    <div class="d-flex gap-4 align-items-center">
                        <div>
                            <img class="rounded-circle"
                            style="width:50px; height:50px;"
                            src="~/img/order_notification.png" />
                        </div>
                        <div class="d-flex flex-column">
                            <div class="me-auto">
                                <h5>@n.Content</h5>
                            </div>
                            <div>@DateFormatHelper.GetDateFormat(n.CreatedAt.Value)</div>
                        </div>
                    </div>
                    <div>
                        @if(User.FindFirst(ClaimTypes.Role)?.Value == UserRoleConstants.Customer)
                        {
                            <a asp-action="Detail" asp-controller="Bills" asp-route-id="@n.OrderId" class="btn btn-primary">
                                Chi tiết
                            </a>
                        }

                        else
                        {
                            <a asp-action="Details" asp-controller="Orders" asp-route-id="@n.OrderId" class="btn btn-primary">
                                Chi tiết
                            </a>
                        }

                        <a id="btn-delete" href="#" data-noti-id="@n.Id" class="btn btn-danger">
                            Xóa
                        </a>
                    </div>
                </div>
            }

            <nav class="py-3">
                @Html.PagedListPager(
                         new StaticPagedList<Notification>(Model.Items, Model.CurrentPage, PAGE_SIZE, Model.TotalItems),
                         page => Url.Action("Index", new
                         {
                             pageIndex = page,
                             pageSize = PAGE_SIZE
                         }),
                         new PagedListRenderOptions
            {
                LiElementClasses = new List<string> { "page-item" },
                PageClasses = new List<string> { "page-link" },

                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,

                LinkToFirstPageFormat = "«",
                LinkToLastPageFormat = "»",
            }
                         )
            </nav>

        </div>
    }

    else
    {
        <h3 class="text-center text-secondary">Không có thông báo mới.</h3>
    }
</div>

@section Scripts {
    <script>
        const button = document.getElementById('btn-delete');

        button.addEventListener('click', async () => {
           const notiId = button.dataset.notiId;
           const url = `https://localhost:7270/api/Notification/${notiId}`;

           try {
                const response = await fetch(url, {
                   method: "PUT",
                   credentials:"include"
                });

                if (!response.ok) {
                    throw new Error(`Response status: ${response.status}`);
                }

                window.location.reload();
           }

           catch (err){
                console.log(err);
           }

        })

    </script>
}